name: Tests

on:
  push:
    branches:
      - master
  pull_request: ~

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.1.2

      - name: Set up Python 3.8
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          pip install -r requirements_dev.txt -e .

      - name: Compute pre-commit cache key
        id: pre-commit-cache
        shell: python
        run: |
          import hashlib
          import sys

          python = "py{}.{}".format(*sys.version_info[:2])
          payload = sys.version.encode() + sys.executable.encode()
          digest = hashlib.sha256(payload).hexdigest()
          result = "${{ runner.os }}-{}-{}-pre-commit".format(python, digest[:8])

          print("::set-output name=result::{}".format(result))

      - name: Restore pre-commit cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.cache/pre-commit
          key: ${{ steps.pre-commit-cache.outputs.result }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ steps.pre-commit-cache.outputs.result }}-

      - name: Run pre-commit
        run: |
          pre-commit run --all-files --show-diff-on-failure

  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: "3.8"
          - python-version: "3.9"
          - python-version: "3.10"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.1.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -r requirements_dev.txt -e .

      - name: Run pytest
        run: |
          coverage run --parallel -m pytest

      - name: Upload coverage data
        if: matrix.python-version == '3.10'
        uses: "actions/upload-artifact@v3.1.2"
        with:
          name: coverage-data
          path: ".coverage.*"

  coverage:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.1.2

      - name: Set up Python 3.10
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install coverage[toml]

      - name: Download coverage data
        uses: actions/download-artifact@v3.0.2
        with:
          name: coverage-data

      - name: Combine coverage data and display human readable report
        run: |
          coverage combine
          coverage report

      - name: Create coverage report
        run: |
          coverage xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v4.3.0

  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.1.2
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.10"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel build

      - name: Build package
        run: |
          python -m build . --wheel
